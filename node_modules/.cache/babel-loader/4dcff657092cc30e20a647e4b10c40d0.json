{"ast":null,"code":"import _objectSpread from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/ForgotPassword.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, DatePicker, Modal, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List;\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ForgotPassword, _React$Component);\n\n  function ForgotPassword() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ForgotPassword)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      email: \"sak@gmail.com\",\n      user: {},\n      autoCompleteResult: []\n    };\n\n    _this.sendLink = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        var valuesFormatted = _objectSpread({}, values, {\n          'birthdate': values['birthdate'].format('YYYY-MM-DD')\n        });\n\n        if (!err) {\n          console.log('Received values of form and now sending to api for Updation: ', valuesFormatted);\n          axios.post(\"http://localhost:8080/update/\".concat(_this.state.email)).then(function (response) {\n            console.log(response);\n            var modalSuccess = Modal.success();\n            modalSuccess.update({\n              title: 'User Updation',\n              content: 'User Updated Successfully!'\n            }); //Perform action based on response\n          }).catch(function (error) {\n            console.log(error);\n            var modalFailure = Modal.error();\n            modalFailure.update({\n              title: 'User Updation',\n              content: 'User Updation Failed!'\n            }); //Perform action based on error\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/user/\".concat(this.state.email)).then(function (res) {\n        var user = res.data;\n\n        _this2.setState({\n          user: user\n        });\n\n        console.log(user);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var config = {\n        rules: [{\n          type: 'object',\n          required: true,\n          message: 'Please select birthdate!'\n        }]\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.sendLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        type: 'email',\n        rules: []\n      })(React.createElement(Input, {\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Confirm Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), getFieldDecorator('confirmemail', {\n        rules: []\n      })(React.createElement(Input, {\n        style: {\n          width: '60%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Send Link\")));\n    }\n  }]);\n\n  return ForgotPassword;\n}(React.Component);\n\nvar forgotPassword = Form.create({\n  name: 'forgot'\n})(ForgotPassword);\nexport default forgotPassword;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/ForgotPassword.js"],"names":["React","Component","axios","Form","DatePicker","Modal","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","ForgotPassword","state","confirmDirty","email","user","autoCompleteResult","sendLink","e","preventDefault","props","form","validateFieldsAndScroll","err","values","valuesFormatted","format","console","log","post","then","response","modalSuccess","success","update","title","content","catch","error","modalFailure","get","res","data","setState","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","config","rules","type","required","message","tailFormItemLayout","offset","width","forgotPassword","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport {\n     Form,DatePicker, Modal,Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\n   } from 'antd';\n\n   const { Option } = Select;\n   const AutoCompleteOption = AutoComplete.Option;\n   const { TextArea, List} = Input;\n\n   class ForgotPassword extends React.Component {\n     state = {\n       confirmDirty: false,\n       email:\"sak@gmail.com\",\n       user:{},\n       autoCompleteResult: [],\n     };\n\n\n     sendLink = (e) => {\n\n       e.preventDefault();\n       this.props.form.validateFieldsAndScroll((err, values) => {\n         const valuesFormatted = {\n            ...values,\n            'birthdate': values['birthdate'].format('YYYY-MM-DD'),\n          };\n         if (!err) {\n           console.log('Received values of form and now sending to api for Updation: ', valuesFormatted);\n           axios.post(`http://localhost:8080/update/${this.state.email}`)\n             .then(function(response){\n               console.log(response);\n               const modalSuccess = Modal.success();\n               modalSuccess.update({\n                title: 'User Updation',\n                content: 'User Updated Successfully!',\n              });\n               //Perform action based on response\n           })\n             .catch(function(error){\n               console.log(error);\n               const modalFailure = Modal.error();\n               modalFailure.update({\n                title: 'User Updation',\n                content: 'User Updation Failed!',\n              });\n               //Perform action based on error\n             });\n         }\n       });\n     }\n\n    componentDidMount() {\n      axios.get(`http://localhost:8080/user/${this.state.email}`)\n        .then(res => {\n          const user = res.data;\n          this.setState({ user });\n          console.log(user);\n        })\n    }\n\n     render() {\n       const { getFieldDecorator } = this.props.form;\n       const { autoCompleteResult } = this.state;\n       const formItemLayout = {\n         labelCol: {\n           xs: { span: 24 },\n           sm: { span: 8 },\n         },\n         wrapperCol: {\n           xs: { span: 24 },\n           sm: { span: 16 },\n         },\n       };\n       const config = {\n         rules: [{ type: 'object', required: true, message: 'Please select birthdate!' }],\n       };\n       const tailFormItemLayout = {\n         wrapperCol: {\n           xs: {\n             span: 24,\n             offset: 0,\n           },\n           sm: {\n             span: 16,\n             offset: 8,\n           },\n         },\n       };\n\n       return (\n         <Form onSubmit={this.sendLink}>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Email\">\n             {getFieldDecorator('email', {\n               type: 'email',\n               rules: [],\n             })(\n               <Input style={{ width: '60%' }}/>\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Confirm Email\"\n           >\n           {getFieldDecorator('confirmemail', {\n             rules: [],\n           })(\n            <Input style={{ width: '60%' }}/>\n           )}\n         </Form.Item>\n           <Form.Item {...tailFormItemLayout}>\n             <Button type=\"primary\" htmlType=\"submit\">Send Link</Button>\n           </Form.Item>\n         </Form>\n\n       );\n     }\n   }\n\n   const forgotPassword = Form.create({ name: 'forgot' })(ForgotPassword);\n\n   export default forgotPassword;\n"]},"metadata":{},"sourceType":"module"}