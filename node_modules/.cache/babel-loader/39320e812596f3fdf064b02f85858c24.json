{"ast":null,"code":"import _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/SignUp.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List;\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form and now sending to api: ', values);\n          axios.post('http://localhost:8080/user', values).then(function (response) {\n            console.log(response); //Perform action based on response\n          }).catch(function (error) {\n            console.log(error); //Perform action based on error\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.handleWebsiteChange = function (value) {\n      var autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(function (domain) {\n          return \"\".concat(value).concat(domain);\n        });\n      }\n\n      _this.setState({\n        autoCompleteResult: autoCompleteResult\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, \" +86 \"), \" \", React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \" +87 \"), \" \"));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \" \", website, \" \");\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Personal Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), getFieldDecorator('description', {\n        rules: [{\n          required: false,\n          message: 'Please provide your personal description!'\n        }]\n      })(React.createElement(TextArea, {\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }))), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Country/Region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), getFieldDecorator('description', {\n        rules: [{\n          required: false,\n          message: 'Please provide your personal description!'\n        }]\n      })(React.createElement(TextArea, {\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \"Nickname & nbsp; \", React.createElement(Tooltip, {\n          title: \"What do you want others to call you?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        })), \" \"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }), getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Habitual Residence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select your habitual residence!'\n        }]\n      })(React.createElement(Cascader, {\n        options: residences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }), getFieldDecorator('website', {\n        rules: [{\n          required: true,\n          message: 'Please input website!'\n        }]\n      })(React.createElement(AutoComplete, {\n        dataSource: websiteOptions,\n        onChange: this.handleWebsiteChange,\n        placeholder: \"website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }))), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Captcha\",\n        extra: \"We must make sure that your are a human.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }), React.createElement(Row, {\n        gutter: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387\n        },\n        __self: this\n      }, React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \" \", getFieldDecorator('captcha', {\n        rules: [{\n          required: true,\n          message: 'Please input the captcha you got!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      })), \" \"), \" \", React.createElement(Col, {\n        span: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \" Get captcha \"), \" \"), \" \"), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }), \" \", getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, \" I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, \" agreement \"))), \" \"), \" \", React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \" Register \"), \" \"), \" \");\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar SignUp = Form.create({\n  name: 'register'\n})(RegistrationForm);\nexport default SignUp;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/SignUp.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","residences","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","post","then","response","catch","error","handleConfirmBlur","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","rules","type","message","required","validator","whitespace","valuePropName","SignUp","create","name"],"mappings":"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","sourcesContent":["import React, {\n  Component\n} from 'react';\nimport axios from 'axios';\n\n\nimport {\n  Form,\n  Input,\n  Tooltip,\n  Icon,\n  Cascader,\n  Select,\n  Row,\n  Col,\n  Checkbox,\n  Button,\n  AutoComplete,\n} from 'antd';\n\nconst {\n  Option\n} = Select;\nconst AutoCompleteOption = AutoComplete.Option;\nconst {\n  TextArea,\n  List\n} = Input;\nconst residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake',\n    }],\n  }],\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men',\n    }],\n  }],\n}];\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  // formHandler(formFields) {\n  //   axios.post('http://localhost:8080/user', formFields)\n  //     .then(function(response){\n  //       console.log(response);\n  //       //Perform action based on response\n  //   })\n  //     .catch(function(error){\n  //       console.log(error);\n  //       //Perform action based on error\n  //     });\n  //   }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('Received values of form and now sending to api: ', values);\n        axios.post('http://localhost:8080/user', values)\n          .then(function(response) {\n            console.log(response);\n            //Perform action based on response\n          })\n          .catch(function(error) {\n            console.log(error);\n            //Perform action based on error\n          });\n      }\n    });\n  }\n\n  handleConfirmBlur = (e) => {\n    const value = e.target.value;\n    this.setState({\n      confirmDirty: this.state.confirmDirty || !!value\n    });\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], {\n        force: true\n      });\n    }\n    callback();\n  }\n\n  handleWebsiteChange = (value) => {\n    let autoCompleteResult;\n    if (!value) {\n      autoCompleteResult = [];\n    } else {\n      autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n    }\n    this.setState({\n      autoCompleteResult\n    });\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const {\n      autoCompleteResult\n    } = this.state;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        },\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })( <\n      Select style = {\n        {\n          width: 70\n        }\n      } >\n      <\n      Option value = \"86\" > +86 < /Option> <\n      Option value = \"87\" > +87 < /Option> <\n      /Select>\n    );\n\n    const websiteOptions = autoCompleteResult.map(website => ( <\n      AutoCompleteOption key = {\n        website\n      } > {\n        website\n      } < /AutoCompleteOption>\n    ));\n\n    return ( <\n      Form onSubmit = {\n        this.handleSubmit\n      } >\n      <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Email\" >\n      {\n        getFieldDecorator('email', {\n          rules: [{\n            type: 'email',\n            message: 'The input is not valid E-mail!',\n          }, {\n            required: true,\n            message: 'Please input your E-mail!',\n          }],\n        })( <\n          Input / >\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Password\" >\n      {\n        getFieldDecorator('password', {\n          rules: [{\n            required: true,\n            message: 'Please input your password!',\n          }, {\n            validator: this.validateToNextPassword,\n          }],\n        })( <\n          Input type = \"password\" / >\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Confirm Password\" >\n      {\n        getFieldDecorator('confirm', {\n          rules: [{\n            required: true,\n            message: 'Please confirm your password!',\n          }, {\n            validator: this.compareToFirstPassword,\n          }],\n        })( <\n          Input type = \"password\"\n          onBlur = {\n            this.handleConfirmBlur\n          }\n          />\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Personal Description\" >\n      {\n        getFieldDecorator('description', {\n          rules: [{\n            required: false,\n            message: 'Please provide your personal description!',\n          }],\n        })( <\n          TextArea rows = {\n            4\n          }\n          />\n        )\n\n      }\n\n      <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Country/Region\" >\n      {\n        getFieldDecorator('description', {\n          rules: [{\n            required: false,\n            message: 'Please provide your personal description!',\n          }],\n        })( <\n          TextArea rows = {\n            4\n          }\n          />\n        )\n\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = {\n        ( <\n          span >\n          Nickname & nbsp; <\n          Tooltip title = \"What do you want others to call you?\" >\n          <\n          Icon type = \"question-circle-o\" / >\n          <\n          /Tooltip> <\n          /span>\n        )\n      } >\n      {\n        getFieldDecorator('nickname', {\n          rules: [{\n            required: true,\n            message: 'Please input your nickname!',\n            whitespace: true\n          }],\n        })( <\n          Input / >\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Habitual Residence\" >\n      {\n        getFieldDecorator('residence', {\n          initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n          rules: [{\n            type: 'array',\n            required: true,\n            message: 'Please select your habitual residence!'\n          }],\n        })( <\n          Cascader options = {\n            residences\n          }\n          />\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Phone Number\" >\n      {\n        getFieldDecorator('phone', {\n          rules: [{\n            required: true,\n            message: 'Please input your phone number!'\n          }],\n        })( <\n          Input addonBefore = {\n            prefixSelector\n          }\n          style = {\n            {\n              width: '100%'\n            }\n          }\n          />\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Website\" >\n      {\n        getFieldDecorator('website', {\n          rules: [{\n            required: true,\n            message: 'Please input website!'\n          }],\n        })( <\n          AutoComplete dataSource = {\n            websiteOptions\n          }\n          onChange = {\n            this.handleWebsiteChange\n          }\n          placeholder = \"website\" >\n          <\n          Input / >\n          <\n          /AutoComplete>\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...formItemLayout\n      }\n      label = \"Captcha\"\n      extra = \"We must make sure that your are a human.\" >\n      <\n      Row gutter = {\n        8\n      } >\n      <\n      Col span = {\n        12\n      } > {\n        getFieldDecorator('captcha', {\n          rules: [{\n            required: true,\n            message: 'Please input the captcha you got!'\n          }],\n        })( <\n          Input / >\n        )\n      } <\n      /Col> <\n      Col span = {\n        12\n      } >\n      <\n      Button > Get captcha < /Button> <\n      /Col> <\n      /Row> <\n      /Form.Item> <\n      Form.Item {\n        ...tailFormItemLayout\n      } > {\n        getFieldDecorator('agreement', {\n          valuePropName: 'checked',\n        })( <\n          Checkbox > I have read the < a href = \"\" > agreement < /a></Checkbox >\n        )\n      } <\n      /Form.Item> <\n      Form.Item {\n        ...tailFormItemLayout\n      } >\n      <\n      Button type = \"primary\"\n      htmlType = \"submit\" > Register < /Button> <\n      /Form.Item> <\n      /Form>\n\n    );\n  }\n}\n\nconst SignUp = Form.create({\n  name: 'register'\n})(RegistrationForm);\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}