{"ast":null,"code":"import _objectSpread from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/SignUp.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, DatePicker, Avatar, Input, Modal, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List;\nvar UserList = ['U', 'Lucy', 'Tom', 'Edward'];\nvar colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\nvar config = {\n  rules: [{\n    type: 'object',\n    required: true,\n    message: 'Please select birthdate!'\n  }]\n};\nvar residences = [{\n  value: 'zhejiang',\n  label: 'Zhejiang',\n  children: [{\n    value: 'hangzhou',\n    label: 'Hangzhou',\n    children: [{\n      value: 'xihu',\n      label: 'West Lake'\n    }]\n  }]\n}, {\n  value: 'jiangsu',\n  label: 'Jiangsu',\n  children: [{\n    value: 'nanjing',\n    label: 'Nanjing',\n    children: [{\n      value: 'zhonghuamen',\n      label: 'Zhong Hua Men'\n    }]\n  }]\n}];\n\nvar RegistrationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegistrationForm, _React$Component);\n\n  function RegistrationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegistrationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegistrationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      user: UserList[0],\n      color: colorList[0]\n    };\n\n    _this.changeUser = function () {\n      var index = UserList.indexOf(_this.state.user);\n\n      _this.setState({\n        user: index < UserList.length - 1 ? UserList[index + 1] : UserList[0],\n        color: index < colorList.length - 1 ? colorList[index + 1] : colorList[0]\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          var valuesFormatted = _objectSpread({}, values, {\n            'birthdate': values['birthdate'].format('YYYY-MM-DD')\n          });\n\n          console.log('Received values of form and now sending to api: ', valuesFormatted);\n          axios.post('http://localhost:8080/user', valuesFormatted).then(function (response) {\n            console.log(response);\n            var modalSuccess = Modal.success();\n            modalSuccess.update({\n              title: 'User Registration',\n              content: 'User Created Successfully!'\n            }); //Perform action based on response\n          }).catch(function (error) {\n            console.log(error);\n            var modalFailure = Modal.error();\n            modalFailure.update({\n              title: 'User Registration',\n              content: 'User Creation Failed!'\n            }); //Perform action based on error\n          });\n        }\n      });\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        confirmDirty: _this.state.confirmDirty || !!value\n      });\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && _this.state.confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    _this.handleWebsiteChange = function (value) {\n      var autoCompleteResult;\n\n      if (!value) {\n        autoCompleteResult = [];\n      } else {\n        autoCompleteResult = ['.com', '.org', '.net'].map(function (domain) {\n          return \"\".concat(value).concat(domain);\n        });\n      }\n\n      _this.setState({\n        autoCompleteResult: autoCompleteResult\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(RegistrationForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"+87\")));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }, website);\n      });\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Upload Avatar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Avatar, {\n        style: {\n          backgroundColor: this.state.color,\n          verticalAlign: 'middle'\n        },\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.user), React.createElement(Button, {\n        size: \"small\",\n        style: {\n          marginLeft: 16,\n          verticalAlign: 'middle'\n        },\n        onClick: this.changeUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Change\")), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        rules: [{\n          type: 'email',\n          message: 'The input is not valid E-mail!'\n        }, {\n          required: true,\n          message: 'Please input your E-mail!'\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Confirm Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), getFieldDecorator('confirm', {\n        rules: [{\n          required: true,\n          message: 'Please confirm your password!'\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Personal Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), getFieldDecorator('description', {\n        rules: [{\n          required: false,\n          message: 'Please provide your personal description!'\n        }]\n      })(React.createElement(TextArea, {\n        rows: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Country/Region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), getFieldDecorator('country', {\n        rules: [{\n          required: false,\n          message: 'Please provide your Country !'\n        }]\n      })(React.createElement(Select, {\n        defaultValue: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"India\"), React.createElement(Option, {\n        value: \"2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Japan\"), React.createElement(Option, {\n        value: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Mongolia\")))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, \"Nickname\\xA0\", React.createElement(Tooltip, {\n          title: \"What do you want others to call you?\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"question-circle-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }), getFieldDecorator('nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your nickname!',\n          whitespace: true\n        }]\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Habitual Residence\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), getFieldDecorator('residence', {\n        initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n        rules: [{\n          type: 'array',\n          required: true,\n          message: 'Please select your habitual residence!'\n        }]\n      })(React.createElement(Cascader, {\n        options: residences,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Birth Date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(Input, {\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }), getFieldDecorator('website', {\n        rules: [{\n          required: true,\n          message: 'Please input website!'\n        }]\n      })(React.createElement(AutoComplete, {\n        dataSource: websiteOptions,\n        onChange: this.handleWebsiteChange,\n        placeholder: \"website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      })))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }), getFieldDecorator('agreement', {\n        valuePropName: 'checked'\n      })(React.createElement(Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"I have read the \", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, \"agreement\")))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, \"Register\")), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        href: \"/SignIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"Login\")));\n    }\n  }]);\n\n  return RegistrationForm;\n}(React.Component);\n\nvar SignUp = Form.create({\n  name: 'register'\n})(RegistrationForm);\nexport default SignUp;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/SignUp.js"],"names":["React","Component","axios","Form","DatePicker","Avatar","Input","Modal","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","UserList","colorList","config","rules","type","required","message","residences","value","label","children","RegistrationForm","state","confirmDirty","autoCompleteResult","user","color","changeUser","index","indexOf","setState","length","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","valuesFormatted","format","console","log","post","then","response","modalSuccess","success","update","title","content","catch","error","modalFailure","handleConfirmBlur","target","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","handleWebsiteChange","map","domain","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","website","backgroundColor","verticalAlign","marginLeft","validator","whitespace","valuePropName","SignUp","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport {\n     Form,DatePicker,Avatar, Input,Modal, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\n   } from 'antd';\n\n   const { Option } = Select;\n   const AutoCompleteOption = AutoComplete.Option;\n   const { TextArea, List} = Input;\n   const UserList = ['U', 'Lucy', 'Tom', 'Edward'];\n   const colorList = ['#f56a00', '#7265e6', '#ffbf00', '#00a2ae'];\n   const config = {\n     rules: [{ type: 'object', required: true, message: 'Please select birthdate!' }],\n   };\n   const residences = [{\n     value: 'zhejiang',\n     label: 'Zhejiang',\n     children: [{\n       value: 'hangzhou',\n       label: 'Hangzhou',\n       children: [{\n         value: 'xihu',\n         label: 'West Lake',\n       }],\n     }],\n   }, {\n     value: 'jiangsu',\n     label: 'Jiangsu',\n     children: [{\n       value: 'nanjing',\n       label: 'Nanjing',\n       children: [{\n         value: 'zhonghuamen',\n         label: 'Zhong Hua Men',\n       }],\n     }],\n   }];\n\n   class RegistrationForm extends React.Component {\n     state = {\n       confirmDirty: false,\n       autoCompleteResult: [],\n       user: UserList[0],\n       color: colorList[0],\n     };\n\n     changeUser = () => {\n       const index = UserList.indexOf(this.state.user);\n       this.setState({\n         user: index < UserList.length - 1 ? UserList[index + 1] : UserList[0],\n         color: index < colorList.length - 1 ? colorList[index + 1] : colorList[0],\n       });\n     }\n     handleSubmit = (e) => {\n       e.preventDefault();\n       this.props.form.validateFieldsAndScroll((err, values) => {\n         if (!err) {\n           const valuesFormatted = {\n              ...values,\n              'birthdate': values['birthdate'].format('YYYY-MM-DD'),\n            };\n           console.log('Received values of form and now sending to api: ', valuesFormatted);\n           axios.post('http://localhost:8080/user', valuesFormatted)\n             .then(function(response){\n               console.log(response);\n               const modalSuccess = Modal.success();\n               modalSuccess.update({\n                title: 'User Registration',\n                content: 'User Created Successfully!',\n              });\n               //Perform action based on response\n           })\n             .catch(function(error){\n               console.log(error);\n               const modalFailure = Modal.error();\n               modalFailure.update({\n                title: 'User Registration',\n                content: 'User Creation Failed!',\n              });\n               //Perform action based on error\n             });\n         }\n       });\n     }\n\n     handleConfirmBlur = (e) => {\n       const value = e.target.value;\n       this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n     }\n\n     compareToFirstPassword = (rule, value, callback) => {\n       const form = this.props.form;\n       if (value && value !== form.getFieldValue('password')) {\n         callback('Two passwords that you enter is inconsistent!');\n       } else {\n         callback();\n       }\n     }\n\n     validateToNextPassword = (rule, value, callback) => {\n       const form = this.props.form;\n       if (value && this.state.confirmDirty) {\n         form.validateFields(['confirm'], { force: true });\n       }\n       callback();\n     }\n\n     handleWebsiteChange = (value) => {\n       let autoCompleteResult;\n       if (!value) {\n         autoCompleteResult = [];\n       } else {\n         autoCompleteResult = ['.com', '.org', '.net'].map(domain => `${value}${domain}`);\n       }\n       this.setState({ autoCompleteResult });\n     }\n\n     render() {\n       const { getFieldDecorator } = this.props.form;\n       const { autoCompleteResult } = this.state;\n\n       const formItemLayout = {\n         labelCol: {\n           xs: { span: 24 },\n           sm: { span: 8 },\n         },\n         wrapperCol: {\n           xs: { span: 24 },\n           sm: { span: 16 },\n         },\n       };\n       const tailFormItemLayout = {\n         wrapperCol: {\n           xs: {\n             span: 24,\n             offset: 0,\n           },\n           sm: {\n             span: 16,\n             offset: 8,\n           },\n         },\n       };\n       const prefixSelector = getFieldDecorator('prefix', {\n         initialValue: '86',\n       })(\n         <Select style={{ width: 70 }}>\n           <Option value=\"86\">+86</Option>\n           <Option value=\"87\">+87</Option>\n         </Select>\n       );\n\n       const websiteOptions = autoCompleteResult.map(website => (\n         <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n       ));\n\n       return (\n         <Form onSubmit={this.handleSubmit}>\n           <Form.Item {...formItemLayout}\n           label=\"Upload Avatar\">\n           <Avatar style={{ backgroundColor: this.state.color, verticalAlign: 'middle' }} size=\"large\">\n             {this.state.user}\n           </Avatar>\n           <Button size=\"small\" style={{ marginLeft: 16, verticalAlign: 'middle' }} onClick={this.changeUser}>\n             Change\n           </Button>\n          </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Email\"\n           >\n             {getFieldDecorator('email', {\n               rules: [{\n                 type: 'email', message: 'The input is not valid E-mail!',\n               }, {\n                 required: true, message: 'Please input your E-mail!',\n               }],\n             })(\n               <Input />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Password\"\n           >\n             {getFieldDecorator('password', {\n               rules: [{\n                 required: true, message: 'Please input your password!',\n               }, {\n                 validator: this.validateToNextPassword,\n               }],\n             })(\n               <Input type=\"password\" />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Confirm Password\"\n           >\n             {getFieldDecorator('confirm', {\n               rules: [{\n                 required: true, message: 'Please confirm your password!',\n               }, {\n                 validator: this.compareToFirstPassword,\n               }],\n             })(\n               <Input type=\"password\" onBlur={this.handleConfirmBlur} />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Personal Description\"\n           >\n           {getFieldDecorator('description', {\n             rules: [{\n               required: false, message: 'Please provide your personal description!',\n             }],\n           })(\n             <TextArea rows={4} />\n           )\n\n         }\n\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Country/Region\"\n           >\n           {getFieldDecorator('country', {\n             rules: [{\n               required: false, message: 'Please provide your Country !',\n             }],\n           })(\n             <Select defaultValue=\"1\">\n              <Option value=\"1\">India</Option>\n              <Option value=\"2\">Japan</Option>\n              <Option value=\"3\">Mongolia</Option>\n            </Select>\n           )\n\n         }\n\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label={(\n               <span>\n                 Nickname&nbsp;\n                 <Tooltip title=\"What do you want others to call you?\">\n                   <Icon type=\"question-circle-o\" />\n                 </Tooltip>\n               </span>\n             )}\n           >\n             {getFieldDecorator('nickname', {\n               rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\n             })(\n               <Input />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Habitual Residence\"\n           >\n             {getFieldDecorator('residence', {\n               initialValue: ['zhejiang', 'hangzhou', 'xihu'],\n               rules: [{ type: 'array', required: true, message: 'Please select your habitual residence!' }],\n             })(\n               <Cascader options={residences} />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Birth Date\"\n             >\n             <DatePicker style={{ width: '100%' }} />\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Phone Number\"\n           >\n             {getFieldDecorator('phone', {\n               rules: [{ required: true, message: 'Please input your phone number!' }],\n             })(\n               <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Website\"\n           >\n             {getFieldDecorator('website', {\n               rules: [{ required: true, message: 'Please input website!' }],\n             })(\n               <AutoComplete\n                 dataSource={websiteOptions}\n                 onChange={this.handleWebsiteChange}\n                 placeholder=\"website\"\n               >\n                 <Input />\n               </AutoComplete>\n             )}\n           </Form.Item>\n\n           <Form.Item {...tailFormItemLayout}>\n             {getFieldDecorator('agreement', {\n               valuePropName: 'checked',\n             })(\n               <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\n             )}\n           </Form.Item>\n           <Form.Item {...tailFormItemLayout}>\n             <Button type=\"primary\" htmlType=\"submit\">Register</Button>\n           </Form.Item>\n           <Form.Item {...tailFormItemLayout}>\n             <Button  type=\"primary\" htmlType=\"submit\"  href = \"/SignIn\">Login</Button>\n           </Form.Item>\n         </Form>\n\n       );\n     }\n   }\n\n   const SignUp = Form.create({ name: 'register' })(RegistrationForm);\n\n   export default SignUp;\n"]},"metadata":{},"sourceType":"module"}