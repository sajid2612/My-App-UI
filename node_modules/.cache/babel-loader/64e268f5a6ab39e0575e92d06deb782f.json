{"ast":null,"code":"import _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List; // const residences = [{\n//   value: 'zhejiang',\n//   label: 'Zhejiang',\n//   children: [{\n//     value: 'hangzhou',\n//     label: 'Hangzhou',\n//     children: [{\n//       value: 'xihu',\n//       label: 'West Lake',\n//     }],\n//   }],\n// }, {\n//   value: 'jiangsu',\n//   label: 'Jiangsu',\n//   children: [{\n//     value: 'nanjing',\n//     label: 'Nanjing',\n//     children: [{\n//       value: 'zhonghuamen',\n//       label: 'Zhong Hua Men',\n//     }],\n//   }],\n// }];\n\nvar UserData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserData, _React$Component);\n\n  function UserData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n    return _this;\n  }\n\n  _createClass(UserData, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"+87\")));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, website);\n      });\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return UserData;\n}(React.Component);\n\nvar user = Form.create({\n  name: 'userdata'\n})(UserData);\nexport default user;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","UserData","state","confirmDirty","autoCompleteResult","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","map","website","user","create","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SACKC,IADL,EACWC,KADX,EACkBC,OADlB,EAC2BC,IAD3B,EACiCC,QADjC,EAC2CC,MAD3C,EACmDC,GADnD,EACwDC,GADxD,EAC6DC,QAD7D,EACuEC,MADvE,EAC+EC,YAD/E,QAEU,MAFV;IAIWC,M,GAAWN,M,CAAXM,M;AACR,IAAMC,kBAAkB,GAAGF,YAAY,CAACC,MAAxC;IACQE,Q,GAAkBZ,K,CAAlBY,Q;IAAUC,I,GAAQb,K,CAARa,I,EAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,kBAAkB,EAAE;AAFd,K;;;;;;6BAOC;AAAA,UACCC,iBADD,GACuB,KAAKC,KAAL,CAAWC,IADlC,CACCF,iBADD;AAAA,UAECD,kBAFD,GAEwB,KAAKF,KAF7B,CAECE,kBAFD;AAIP,UAAMI,cAAc,GAAG;AACrBC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADI;AAERC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFI,SADW;AAKrBE,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AAAEC,YAAAA,IAAI,EAAE;AAAR,WADM;AAEVC,UAAAA,EAAE,EAAE;AAAED,YAAAA,IAAI,EAAE;AAAR;AAFM;AALS,OAAvB;AAUA,UAAMG,kBAAkB,GAAG;AACzBD,QAAAA,UAAU,EAAE;AACVH,UAAAA,EAAE,EAAE;AACFC,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN,WADM;AAKVH,UAAAA,EAAE,EAAE;AACFD,YAAAA,IAAI,EAAE,EADJ;AAEFI,YAAAA,MAAM,EAAE;AAFN;AALM;AADa,OAA3B;AAYA,UAAMC,cAAc,GAAGX,iBAAiB,CAAC,QAAD,EAAW;AACjDY,QAAAA,YAAY,EAAE;AADmC,OAAX,CAAjB,CAGrB,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAHqB,CAAvB;AASA,UAAMC,cAAc,GAAGf,kBAAkB,CAACgB,GAAnB,CAAuB,UAAAC,OAAO;AAAA,eACnD,oBAAC,kBAAD;AAAoB,UAAA,GAAG,EAAEA,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmCA,OAAnC,CADmD;AAAA,OAA9B,CAAvB;AAIA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EArDoBtC,KAAK,CAACC,S;;AAwD7B,IAAMsC,IAAI,GAAGpC,IAAI,CAACqC,MAAL,CAAY;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAkCvB,QAAlC,CAAb;AAEA,eAAeqB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport {\n     Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\n   } from 'antd';\n\n   const { Option } = Select;\n   const AutoCompleteOption = AutoComplete.Option;\n   const { TextArea, List} = Input;\n   // const residences = [{\n   //   value: 'zhejiang',\n   //   label: 'Zhejiang',\n   //   children: [{\n   //     value: 'hangzhou',\n   //     label: 'Hangzhou',\n   //     children: [{\n   //       value: 'xihu',\n   //       label: 'West Lake',\n   //     }],\n   //   }],\n   // }, {\n   //   value: 'jiangsu',\n   //   label: 'Jiangsu',\n   //   children: [{\n   //     value: 'nanjing',\n   //     label: 'Nanjing',\n   //     children: [{\n   //       value: 'zhonghuamen',\n   //       label: 'Zhong Hua Men',\n   //     }],\n   //   }],\n   // }];\n\n   class UserData extends React.Component {\n     state = {\n       confirmDirty: false,\n       autoCompleteResult: [],\n     };\n\n\n\n     render() {\n       const { getFieldDecorator } = this.props.form;\n       const { autoCompleteResult } = this.state;\n\n       const formItemLayout = {\n         labelCol: {\n           xs: { span: 24 },\n           sm: { span: 8 },\n         },\n         wrapperCol: {\n           xs: { span: 24 },\n           sm: { span: 16 },\n         },\n       };\n       const tailFormItemLayout = {\n         wrapperCol: {\n           xs: {\n             span: 24,\n             offset: 0,\n           },\n           sm: {\n             span: 16,\n             offset: 8,\n           },\n         },\n       };\n       const prefixSelector = getFieldDecorator('prefix', {\n         initialValue: '86',\n       })(\n         <Select style={{ width: 70 }}>\n           <Option value=\"86\">+86</Option>\n           <Option value=\"87\">+87</Option>\n         </Select>\n       );\n\n       const websiteOptions = autoCompleteResult.map(website => (\n         <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n       ));\n\n       return (\n         <Form >\n           \n         </Form>\n\n       );\n     }\n   }\n\n   const user = Form.create({ name: 'userdata' })(UserData);\n\n   export default user;\n"]},"metadata":{},"sourceType":"module"}