{"ast":null,"code":"import _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Modal, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List;\n\nvar UserData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserData, _React$Component);\n\n  function UserData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      email: \"sak@gmail.com\",\n      user: {},\n      autoCompleteResult: []\n    };\n\n    _this.updateUser = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {\n          console.log('Received values of form and now sending to api for Updation: ', values);\n          axios.post('http://localhost:8080/update/user${this.state.email}').then(function (response) {\n            console.log(response);\n            var modalSuccess = Modal.success();\n            modalSuccess.update({\n              title: 'User Updation',\n              content: 'User Updated Successfully!'\n            }); //Perform action based on response\n          }).catch(function (error) {\n            console.log(error);\n            var modalFailure = Modal.error();\n            modalFailure.update({\n              title: 'User Updation',\n              content: 'User Updation Failed!'\n            }); //Perform action based on error\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserData, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        email: event.target.value\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/user/\".concat(this.state.email)).then(function (res) {\n        var user = res.data;\n\n        _this2.setState({\n          user: user\n        });\n\n        console.log(user);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      return React.createElement(Form, {\n        onSubmit: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), getFieldDecorator('email', {\n        initialValue: this.state.user.email,\n        rules: []\n      })(React.createElement(Input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Personal Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        rows: 4,\n        value: this.state.user.personalDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Country/Region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.user.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.user.nickName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.user.phoneNumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.user.website,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Update Information\")));\n    }\n  }]);\n\n  return UserData;\n}(React.Component);\n\nvar user = Form.create({\n  name: 'userdata'\n})(UserData);\nexport default user;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js"],"names":["React","Component","axios","Form","Modal","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","UserData","state","confirmDirty","email","user","autoCompleteResult","updateUser","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","post","then","response","modalSuccess","success","update","title","content","catch","error","modalFailure","event","setState","target","value","get","res","data","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","initialValue","rules","personalDescription","country","nickName","phoneNumber","website","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport {\n     Form, Modal,Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\n   } from 'antd';\n\n   const { Option } = Select;\n   const AutoCompleteOption = AutoComplete.Option;\n   const { TextArea, List} = Input;\n\n   class UserData extends React.Component {\n     state = {\n       confirmDirty: false,\n       email:\"sak@gmail.com\",\n       user:{},\n       autoCompleteResult: [],\n     };\n\n     handleChange(event) {\n       this.setState({email: event.target.value})\n     }\n\n     updateUser = (e) => {\n       e.preventDefault();\n       this.props.form.validateFieldsAndScroll((err, values) => {\n         if (!err) {\n           console.log('Received values of form and now sending to api for Updation: ', values);\n           axios.post('http://localhost:8080/update/user${this.state.email}')\n             .then(function(response){\n               console.log(response);\n               const modalSuccess = Modal.success();\n               modalSuccess.update({\n                title: 'User Updation',\n                content: 'User Updated Successfully!',\n              });\n               //Perform action based on response\n           })\n             .catch(function(error){\n               console.log(error);\n               const modalFailure = Modal.error();\n               modalFailure.update({\n                title: 'User Updation',\n                content: 'User Updation Failed!',\n              });\n               //Perform action based on error\n             });\n         }\n       });\n     }\n\n    componentDidMount() {\n      axios.get(`http://localhost:8080/user/${this.state.email}`)\n        .then(res => {\n          const user = res.data;\n          this.setState({ user });\n          console.log(user);\n        })\n    }\n\n     render() {\n       const { getFieldDecorator } = this.props.form;\n       const { autoCompleteResult } = this.state;\n       const formItemLayout = {\n         labelCol: {\n           xs: { span: 24 },\n           sm: { span: 8 },\n         },\n         wrapperCol: {\n           xs: { span: 24 },\n           sm: { span: 16 },\n         },\n       };\n       const tailFormItemLayout = {\n         wrapperCol: {\n           xs: {\n             span: 24,\n             offset: 0,\n           },\n           sm: {\n             span: 16,\n             offset: 8,\n           },\n         },\n       };\n\n       return (\n         <Form onSubmit={this.updateUser}>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Email\">\n             {getFieldDecorator('email', {\n               initialValue:this.state.user.email,\n               rules: [],\n             })(\n\n               <Input/>\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Personal Description\"\n           >\n\n             <TextArea rows={4}  value = {this.state.user.personalDescription}/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Country/Region\"\n           >\n            <Input  value = {this.state.user.country}/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Nickname\"\n           >\n            <Input  value = {this.state.user.nickName}/>\n           </Form.Item>\n\n           <Form.Item\n             {...formItemLayout}\n             label=\"Phone Number\"\n           >\n               <Input  value ={this.state.user.phoneNumber}/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Website\"\n           >\n          <Input  value ={this.state.user.website}/>\n           </Form.Item>\n           <Form.Item {...tailFormItemLayout}>\n             <Button type=\"primary\" htmlType=\"submit\">Update Information</Button>\n           </Form.Item>\n         </Form>\n\n       );\n     }\n   }\n\n   const user = Form.create({ name: 'userdata' })(UserData);\n\n   export default user;\n"]},"metadata":{},"sourceType":"module"}