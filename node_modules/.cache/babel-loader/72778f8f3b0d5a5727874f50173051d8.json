{"ast":null,"code":"import _classCallCheck from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sajid.khan/ReactDemo/My-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete } from 'antd';\nvar Option = Select.Option;\nvar AutoCompleteOption = AutoComplete.Option;\nvar TextArea = Input.TextArea,\n    List = Input.List;\n\nvar UserData =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserData, _React$Component);\n\n  function UserData() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserData)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false,\n      email: \"sak@gmail.com\",\n      user: null,\n      autoCompleteResult: []\n    };\n    return _this;\n  }\n\n  _createClass(UserData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8080/user/\".concat(this.state.email)).then(function (res) {\n        var user = res.data;\n\n        _this2.setState({\n          user: user\n        });\n\n        console.log(user);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var autoCompleteResult = this.state.autoCompleteResult;\n      var formItemLayout = {\n        labelCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 8\n          }\n        },\n        wrapperCol: {\n          xs: {\n            span: 24\n          },\n          sm: {\n            span: 16\n          }\n        }\n      };\n      var tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0\n          },\n          sm: {\n            span: 16,\n            offset: 8\n          }\n        }\n      };\n      var prefixSelector = getFieldDecorator('prefix', {\n        initialValue: '86'\n      })(React.createElement(Select, {\n        style: {\n          width: 70\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"86\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"+86\"), React.createElement(Option, {\n        value: \"87\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"+87\")));\n      var websiteOptions = autoCompleteResult.map(function (website) {\n        return React.createElement(AutoCompleteOption, {\n          key: website,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, website);\n      });\n      return React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(Input, {\n        readOnly: true,\n        value: this.state.user.nickname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Personal Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(TextArea, {\n        rows: 4,\n        readOnly: true,\n        value: \"Hi\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Country/Region\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Input, {\n        readOnly: true,\n        value: \"9923223\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Input, {\n        readOnly: true,\n        value: \"SAK\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Phone Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), getFieldDecorator('phone', {\n        rules: [{\n          required: true,\n          message: 'Please input your phone number!'\n        }]\n      })(React.createElement(Input, {\n        readOnly: true,\n        addonBefore: prefixSelector,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }))), React.createElement(Form.Item, Object.assign({}, formItemLayout, {\n        label: \"Website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), getFieldDecorator('website', {\n        rules: [{\n          required: true,\n          message: 'Please input website!'\n        }]\n      })(React.createElement(AutoComplete, {\n        dataSource: websiteOptions,\n        onChange: this.handleWebsiteChange,\n        placeholder: \"website\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Input, {\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Update Information\")));\n    }\n  }]);\n\n  return UserData;\n}(React.Component);\n\nvar user = Form.create({\n  name: 'userdata'\n})(UserData);\nexport default user;","map":{"version":3,"sources":["/Users/sajid.khan/ReactDemo/My-App/src/Views/UserData.js"],"names":["React","Component","axios","Form","Input","Tooltip","Icon","Cascader","Select","Row","Col","Checkbox","Button","AutoComplete","Option","AutoCompleteOption","TextArea","List","UserData","state","confirmDirty","email","user","autoCompleteResult","get","then","res","data","setState","console","log","getFieldDecorator","props","form","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","websiteOptions","map","website","nickname","rules","required","message","handleWebsiteChange","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nimport {\n     Form, Input, Tooltip, Icon, Cascader, Select, Row, Col, Checkbox, Button, AutoComplete,\n   } from 'antd';\n\n   const { Option } = Select;\n   const AutoCompleteOption = AutoComplete.Option;\n   const { TextArea, List} = Input;\n\n   class UserData extends React.Component {\n     state = {\n       confirmDirty: false,\n       email:\"sak@gmail.com\",\n       user:null,\n       autoCompleteResult: [],\n     };\n\n\n    componentDidMount() {\n      axios.get(`http://localhost:8080/user/${this.state.email}`)\n        .then(res => {\n          const user = res.data;\n          this.setState({ user });\n          console.log(user);\n        })\n    }\n\n     render() {\n       const { getFieldDecorator } = this.props.form;\n       const { autoCompleteResult } = this.state;\n       const formItemLayout = {\n         labelCol: {\n           xs: { span: 24 },\n           sm: { span: 8 },\n         },\n         wrapperCol: {\n           xs: { span: 24 },\n           sm: { span: 16 },\n         },\n       };\n       const tailFormItemLayout = {\n         wrapperCol: {\n           xs: {\n             span: 24,\n             offset: 0,\n           },\n           sm: {\n             span: 16,\n             offset: 8,\n           },\n         },\n       };\n       const prefixSelector = getFieldDecorator('prefix', {\n         initialValue: '86',\n       })(\n         <Select style={{ width: 70 }}>\n           <Option value=\"86\">+86</Option>\n           <Option value=\"87\">+87</Option>\n         </Select>\n       );\n\n       const websiteOptions = autoCompleteResult.map(website => (\n         <AutoCompleteOption key={website}>{website}</AutoCompleteOption>\n       ));\n\n       return (\n         <Form>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Email\">\n\n               <Input readOnly value = {this.state.user.nickname}/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Personal Description\"\n           >\n\n             <TextArea rows={4} readOnly value = \"Hi\"/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Country/Region\"\n           >\n            <Input readOnly value = \"9923223\"/>\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Nickname\"\n           >\n            <Input readOnly value = \"SAK\"/>\n           </Form.Item>\n\n           <Form.Item\n             {...formItemLayout}\n             label=\"Phone Number\"\n           >\n             {getFieldDecorator('phone', {\n               rules: [{ required: true, message: 'Please input your phone number!' }],\n             })(\n               <Input readOnly addonBefore={prefixSelector} style={{ width: '100%' }} />\n             )}\n           </Form.Item>\n           <Form.Item\n             {...formItemLayout}\n             label=\"Website\"\n           >\n             {getFieldDecorator('website', {\n               rules: [{ required: true, message: 'Please input website!' }],\n             })(\n               <AutoComplete\n                 dataSource={websiteOptions}\n                 onChange={this.handleWebsiteChange}\n                 placeholder=\"website\"\n               >\n                 <Input readOnly/>\n               </AutoComplete>\n             )}\n           </Form.Item>\n           <Form.Item {...tailFormItemLayout}>\n             <Button type=\"primary\" htmlType=\"submit\">Update Information</Button>\n           </Form.Item>\n         </Form>\n\n       );\n     }\n   }\n\n   const user = Form.create({ name: 'userdata' })(UserData);\n\n   export default user;\n"]},"metadata":{},"sourceType":"module"}